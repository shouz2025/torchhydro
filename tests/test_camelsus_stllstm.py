"""test stldataset"""

import os
import sys
import pytest
cur_path = os.path.abspath(os.path.dirname(__file__))

from torchhydro import SETTING
from torchhydro.configs.config import cmd, default_config_file, update_cfg
from torchhydro.trainers.trainer import train_and_evaluate

@pytest.fixture
def var_c():
    return [
        # "elev_mean",
        # "slope_mean",
        # "area_gages2",
        # "frac_forest",
        # "lai_max",
        # "lai_diff",
        # "dom_land_cover_frac",
        # "dom_land_cover",
        # "root_depth_50",
        # "soil_depth_statsgo",
        # "soil_porosity",
        # "soil_conductivity",
        # "max_water_content",
        # "geol_1st_class",
        # "geol_2nd_class",
        # "geol_porostiy",
        # "geol_permeability",
    ]

@pytest.fixture
def var_t():
    return [
        # NOTE: prcp must be the first variable
        "prcp",
        # "PET"
        # "dayl",
        # "srad",
        # "swe",
        # "tmax",
        # "tmin",
        # "vp",
    ]

@pytest.fixture
def arg_camelsus_sltLstm(
    var_c,
    var_t,
):
    """
    Use attr and forcing as input for dPL model

    Parameters
    ----------
    config

    Returns
    -------

    """
    project_name = os.path.join("test_camels", "stldataset_camelsus")
    # camels-us time_range: ["1980-01-01", "2014-12-31"]
    train_period = ["1980-10-01", "2012-09-30"]
    valid_period = ["2012-10-01", "2013-09-30"]
    test_period = ["2013-10-01", "2014-09-30"]

    return cmd(
        sub=project_name,
        source_cfgs={
            "source_name": "camels_us",
            "source_path": os.path.join(
                SETTING["local_data_path"]["datasets-origin"], "camels", "camels_us"
            ),
        },
        ctx=[-1],
        # model_name="CpuLSTM",
        model_name="sLSTM",
        model_hyperparam={
            "input_size": 3,  # len(var_c) + len(var_t),  # 17 + 7 = 24  trend, season, residuals
            "output_size": 3,
            "hidden_size": 256,
        },
        loss_func="RMSESum",
        sampler="KuaiSampler",
        dataset="StlDataset",
        scaler="DapengScaler",
        scaler_params={
            "prcp_norm_cols": [
                "streamflow",
            ],
            "gamma_norm_cols": [
                "prcp",
                "pr",
                "total_precipitation",
                "potential_evaporation",
                "ET",
                "PET",
                "ET_sum",
                "ssm",
            ],
            "pbm_norm": True,
        },
        batch_size=2,
        forecast_history=0,
        forecast_length=365,
        var_t=var_t,
        var_c=var_c,
        var_out=["streamflow"],
        train_period=train_period,
        valid_period=valid_period,
        test_period=test_period,
        opt="Adadelta",
        rs=1234,
        train_epoch=10,
        save_epoch=1,
        model_loader={
            "load_way": "specified",
            "test_epoch": 10,
        },
        # # the gage_id.txt file is set by the user, it must be the format like:
        # # GAUGE_ID
        # # 01013500
        # # 01022500
        # # ......
        # # Then it can be read by pd.read_csv(gage_id_file, dtype={0: str}).iloc[:, 0].values to get the gage_id list
        # # gage_id_file = "D:\\minio\\waterism\\datasets-origin\\camels\\camels_us\\gage_id.txt",
        # gage_id_file="/mnt/d/minio/waterism/datasets-origin/camels/camels_us/gage_id.txt",
        gage_id=[
            "01013500",
            "01022500",
            # # "01030500",
            # # "01031500",
            # # "01047000",
            # # "01052500",
            # # "01054200",
            # # "01055000",
            # # "01057000",
            # # "01073000",
            # # "01078000",
            # # "01118300",
            # # "01121000",
            # # "01123000",
            # # "01134500",
            # # "01137500",
            # # "01139000",
            # # "01139800",
            # # "01142500",
            # # "01144000",
            # "02092500",  # 02108000 -> 02092500
            # "02108000",
        ],
        b_decompose=True,
        which_first_tensor="sequence",
    )

def test_camels_sltLstm(arg_camelsus_sltLstm):
    config_data = default_config_file()
    update_cfg(config_data, arg_camelsus_sltLstm)
    train_and_evaluate(config_data)
    print("All processes are finished!")

# ============================= test session starts ==============================
# platform linux -- Python 3.13.3, pytest-8.3.5, pluggy-1.5.0
# rootdir: /home/yulili/code/torchhydro/tests
# configfile: ../setup.cfg
# plugins: mock-3.14.0
# collected 1 item

# test_camelsus_stllstm.py update config file
# !!!!!!NOTE!!!!!!!!
# -------Please make sure the PRECIPITATION variable is in the 1st location in var_t setting!!---------
# If you have POTENTIAL_EVAPOTRANSPIRATION, please set it the 2nd!!!-
# !!!!!!NOTE!!!!!!!!
# -------Please make sure the STREAMFLOW variable is in the 1st location in var_out setting!!---------
# Backend tkagg is interactive backend. Turning interactive mode on.
# Finish Normalization


#   0%|          | 0/2 [00:00<?, ?it/s]
# 100%|██████████| 2/2 [00:00<00:00, 35.74it/s]
# Finish Normalization


#   0%|          | 0/2 [00:00<?, ?it/s]
# 100%|██████████| 2/2 [00:00<00:00, 13888.42it/s]
# Finish Normalization


#   0%|          | 0/2 [00:00<?, ?it/s]
# 100%|██████████| 2/2 [00:00<00:00, 30393.51it/s]
# Torch is using cpu
# I0519 10:13:53.142000 13800 site-packages/torch/distributed/nn/jit/instantiator.py:22] Created a temporary directory at /tmp/tmp_y_tk9zr
# I0519 10:13:53.147000 13800 site-packages/torch/distributed/nn/jit/instantiator.py:73] Writing /tmp/tmp_y_tk9zr/_remote_module_non_scriptable.py
# using 0 workers

#   0%|          | 0/146 [00:00<?, ?it/s]
#   1%|          | 1/146 [00:00<00:53,  2.71it/s]
#   1%|▏         | 2/146 [00:00<00:50,  2.88it/s]
#   2%|▏         | 3/146 [00:00<00:44,  3.20it/s]
#   3%|▎         | 4/146 [00:01<00:42,  3.35it/s]
#   3%|▎         | 5/146 [00:01<00:40,  3.47it/s]
#   4%|▍         | 6/146 [00:01<00:40,  3.47it/s]
#   5%|▍         | 7/146 [00:02<00:39,  3.54it/s]
#   5%|▌         | 8/146 [00:02<00:39,  3.53it/s]
#   6%|▌         | 9/146 [00:02<00:39,  3.50it/s]
#   7%|▋         | 10/146 [00:02<00:39,  3.46it/s]
#   8%|▊         | 11/146 [00:03<00:38,  3.49it/s]
#   8%|▊         | 12/146 [00:03<00:38,  3.52it/s]
#   9%|▉         | 13/146 [00:03<00:37,  3.53it/s]
#  10%|▉         | 14/146 [00:04<00:36,  3.62it/s]
#  10%|█         | 15/146 [00:04<00:36,  3.63it/s]
#  11%|█         | 16/146 [00:04<00:35,  3.65it/s]
#  12%|█▏        | 17/146 [00:04<00:35,  3.62it/s]
#  12%|█▏        | 18/146 [00:05<00:38,  3.35it/s]
#  13%|█▎        | 19/146 [00:05<00:37,  3.39it/s]
#  14%|█▎        | 20/146 [00:05<00:37,  3.39it/s]
#  14%|█▍        | 21/146 [00:06<00:36,  3.43it/s]
#  15%|█▌        | 22/146 [00:06<00:35,  3.50it/s]
#  16%|█▌        | 23/146 [00:06<00:34,  3.52it/s]
#  16%|█▋        | 24/146 [00:06<00:34,  3.59it/s]
#  17%|█▋        | 25/146 [00:07<00:33,  3.57it/s]
#  18%|█▊        | 26/146 [00:07<00:33,  3.63it/s]
#  18%|█▊        | 27/146 [00:07<00:32,  3.62it/s]
#  19%|█▉        | 28/146 [00:08<00:32,  3.60it/s]
#  20%|█▉        | 29/146 [00:08<00:32,  3.62it/s]
#  21%|██        | 30/146 [00:08<00:31,  3.63it/s]
#  21%|██        | 31/146 [00:08<00:31,  3.68it/s]
#  22%|██▏       | 32/146 [00:09<00:30,  3.68it/s]
#  23%|██▎       | 33/146 [00:09<00:30,  3.70it/s]
#  23%|██▎       | 34/146 [00:09<00:29,  3.74it/s]
#  24%|██▍       | 35/146 [00:09<00:29,  3.72it/s]
#  25%|██▍       | 36/146 [00:10<00:30,  3.65it/s]
#  25%|██▌       | 37/146 [00:10<00:29,  3.68it/s]
#  26%|██▌       | 38/146 [00:10<00:28,  3.75it/s]
#  27%|██▋       | 39/146 [00:10<00:28,  3.75it/s]
#  27%|██▋       | 40/146 [00:11<00:29,  3.65it/s]
#  28%|██▊       | 41/146 [00:11<00:28,  3.69it/s]
#  29%|██▉       | 42/146 [00:11<00:27,  3.72it/s]
#  29%|██▉       | 43/146 [00:12<00:27,  3.68it/s]
#  30%|███       | 44/146 [00:12<00:27,  3.68it/s]
#  31%|███       | 45/146 [00:12<00:27,  3.71it/s]
#  32%|███▏      | 46/146 [00:12<00:27,  3.66it/s]
#  32%|███▏      | 47/146 [00:13<00:27,  3.63it/s]
#  33%|███▎      | 48/146 [00:13<00:26,  3.65it/s]
#  34%|███▎      | 49/146 [00:13<00:26,  3.68it/s]
#  34%|███▍      | 50/146 [00:13<00:26,  3.67it/s]
#  35%|███▍      | 51/146 [00:14<00:26,  3.64it/s]
#  36%|███▌      | 52/146 [00:14<00:25,  3.65it/s]
#  36%|███▋      | 53/146 [00:14<00:25,  3.65it/s]
#  37%|███▋      | 54/146 [00:15<00:25,  3.67it/s]
#  38%|███▊      | 55/146 [00:15<00:25,  3.60it/s]
#  38%|███▊      | 56/146 [00:15<00:25,  3.58it/s]
#  39%|███▉      | 57/146 [00:15<00:24,  3.62it/s]
#  40%|███▉      | 58/146 [00:16<00:24,  3.64it/s]
#  40%|████      | 59/146 [00:16<00:24,  3.62it/s]
#  41%|████      | 60/146 [00:16<00:23,  3.63it/s]
#  42%|████▏     | 61/146 [00:17<00:24,  3.53it/s]
#  42%|████▏     | 62/146 [00:17<00:24,  3.38it/s]
#  43%|████▎     | 63/146 [00:17<00:24,  3.38it/s]
#  44%|████▍     | 64/146 [00:17<00:23,  3.44it/s]
#  45%|████▍     | 65/146 [00:18<00:23,  3.50it/s]
#  45%|████▌     | 66/146 [00:18<00:22,  3.56it/s]
#  46%|████▌     | 67/146 [00:18<00:22,  3.57it/s]
#  47%|████▋     | 68/146 [00:19<00:21,  3.62it/s]
#  47%|████▋     | 69/146 [00:19<00:21,  3.59it/s]
#  48%|████▊     | 70/146 [00:19<00:20,  3.63it/s]
#  49%|████▊     | 71/146 [00:19<00:21,  3.54it/s]
#  49%|████▉     | 72/146 [00:20<00:21,  3.45it/s]
#  50%|█████     | 73/146 [00:20<00:20,  3.52it/s]
#  51%|█████     | 74/146 [00:20<00:20,  3.56it/s]
#  51%|█████▏    | 75/146 [00:21<00:20,  3.54it/s]
#  52%|█████▏    | 76/146 [00:21<00:19,  3.58it/s]
#  53%|█████▎    | 77/146 [00:21<00:19,  3.54it/s]
#  53%|█████▎    | 78/146 [00:21<00:18,  3.58it/s]
#  54%|█████▍    | 79/146 [00:22<00:18,  3.61it/s]
#  55%|█████▍    | 80/146 [00:22<00:18,  3.60it/s]
#  55%|█████▌    | 81/146 [00:22<00:17,  3.66it/s]
#  56%|█████▌    | 82/146 [00:22<00:17,  3.62it/s]
#  57%|█████▋    | 83/146 [00:23<00:17,  3.65it/s]
#  58%|█████▊    | 84/146 [00:23<00:17,  3.55it/s]
#  58%|█████▊    | 85/146 [00:23<00:17,  3.57it/s]
#  59%|█████▉    | 86/146 [00:24<00:17,  3.51it/s]
#  60%|█████▉    | 87/146 [00:24<00:17,  3.38it/s]
#  60%|██████    | 88/146 [00:24<00:16,  3.47it/s]
#  61%|██████    | 89/146 [00:24<00:16,  3.47it/s]
#  62%|██████▏   | 90/146 [00:25<00:16,  3.49it/s]
#  62%|██████▏   | 91/146 [00:25<00:16,  3.38it/s]
#  63%|██████▎   | 92/146 [00:25<00:16,  3.34it/s]
#  64%|██████▎   | 93/146 [00:26<00:16,  3.27it/s]
#  64%|██████▍   | 94/146 [00:26<00:16,  3.16it/s]
#  65%|██████▌   | 95/146 [00:26<00:16,  3.10it/s]
#  66%|██████▌   | 96/146 [00:27<00:16,  3.05it/s]
#  66%|██████▋   | 97/146 [00:27<00:15,  3.10it/s]
#  67%|██████▋   | 98/146 [00:27<00:15,  3.01it/s]
#  68%|██████▊   | 99/146 [00:28<00:14,  3.14it/s]
#  68%|██████▊   | 100/146 [00:28<00:14,  3.24it/s]
#  69%|██████▉   | 101/146 [00:28<00:13,  3.30it/s]
#  70%|██████▉   | 102/146 [00:29<00:14,  3.09it/s]
#  71%|███████   | 103/146 [00:29<00:14,  3.06it/s]
#  71%|███████   | 104/146 [00:29<00:13,  3.09it/s]
#  72%|███████▏  | 105/146 [00:30<00:13,  3.15it/s]
#  73%|███████▎  | 106/146 [00:30<00:12,  3.24it/s]
#  73%|███████▎  | 107/146 [00:30<00:11,  3.32it/s]
#  74%|███████▍  | 108/146 [00:30<00:11,  3.38it/s]
#  75%|███████▍  | 109/146 [00:31<00:10,  3.43it/s]
#  75%|███████▌  | 110/146 [00:31<00:10,  3.45it/s]
#  76%|███████▌  | 111/146 [00:31<00:10,  3.47it/s]
#  77%|███████▋  | 112/146 [00:32<00:09,  3.50it/s]
#  77%|███████▋  | 113/146 [00:32<00:09,  3.56it/s]
#  78%|███████▊  | 114/146 [00:32<00:09,  3.54it/s]
#  79%|███████▉  | 115/146 [00:32<00:08,  3.50it/s]
#  79%|███████▉  | 116/146 [00:33<00:08,  3.55it/s]
#  80%|████████  | 117/146 [00:33<00:08,  3.59it/s]
#  81%|████████  | 118/146 [00:33<00:07,  3.64it/s]
#  82%|████████▏ | 119/146 [00:33<00:07,  3.63it/s]
#  82%|████████▏ | 120/146 [00:34<00:07,  3.62it/s]
#  83%|████████▎ | 121/146 [00:34<00:06,  3.63it/s]
#  84%|████████▎ | 122/146 [00:34<00:06,  3.63it/s]
#  84%|████████▍ | 123/146 [00:35<00:06,  3.58it/s]
#  85%|████████▍ | 124/146 [00:35<00:06,  3.58it/s]
#  86%|████████▌ | 125/146 [00:35<00:06,  3.45it/s]
#  86%|████████▋ | 126/146 [00:35<00:05,  3.51it/s]
#  87%|████████▋ | 127/146 [00:36<00:05,  3.57it/s]
#  88%|████████▊ | 128/146 [00:36<00:04,  3.60it/s]
#  88%|████████▊ | 129/146 [00:36<00:04,  3.60it/s]
#  89%|████████▉ | 130/146 [00:37<00:04,  3.65it/s]
#  90%|████████▉ | 131/146 [00:37<00:04,  3.65it/s]
#  90%|█████████ | 132/146 [00:37<00:03,  3.66it/s]
#  91%|█████████ | 133/146 [00:37<00:03,  3.65it/s]
#  92%|█████████▏| 134/146 [00:38<00:03,  3.66it/s]
#  92%|█████████▏| 135/146 [00:38<00:03,  3.64it/s]
#  93%|█████████▎| 136/146 [00:38<00:02,  3.62it/s]
#  94%|█████████▍| 137/146 [00:38<00:02,  3.66it/s]
#  95%|█████████▍| 138/146 [00:39<00:02,  3.69it/s]
#  95%|█████████▌| 139/146 [00:39<00:01,  3.67it/s]
#  96%|█████████▌| 140/146 [00:39<00:01,  3.66it/s]
#  97%|█████████▋| 141/146 [00:40<00:01,  3.65it/s]
#  97%|█████████▋| 142/146 [00:40<00:01,  3.66it/s]
#  98%|█████████▊| 143/146 [00:40<00:00,  3.62it/s]
#  99%|█████████▊| 144/146 [00:40<00:00,  3.66it/s]
#  99%|█████████▉| 145/146 [00:41<00:00,  3.67it/s]
# 100%|██████████| 146/146 [00:41<00:00,  3.63it/s]
# 100%|██████████| 146/146 [00:41<00:00,  3.52it/s]
# Epoch 1 Loss 2.6653 time 43.21 lr 1.0
# sLSTM(
#   (linearIn): Linear(in_features=3, out_features=256, bias=True)
#   (lstm): LSTM(256, 256, num_layers=10)
#   (linearOut): Linear(in_features=256, out_features=3, bias=True)
# )
# Epoch 1 Valid Loss 2.7783 Valid Metric {'NSE of trend': [-20.92224884033203, -87.83651733398438], 'RMSE of trend': [1.109979510307312, 0.3929201066493988], 
# 'R2 of trend': [-20.92224884033203, -87.83651733398438], 'KGE of trend': [-1.1369769058684946, -0.29121413288877696], 
# 'FHV of trend': [-134.15444946289062, -52.27025604248047], 'FLV of trend': [-197.01478576660156, -53.76605224609375], 
# 'NSE of season': [-0.00026428699493408203, -7.712841033935547e-05], 'RMSE of season': [1.3842726945877075, 0.31533461809158325], 
# 'R2 of season': [-0.00026428699493408203, -7.712841033935547e-05], 'KGE of season': [-0.7405656916277983, -0.9441809034136552], 
# 'FHV of season': [-100.01131439208984, -100.06574249267578], 'FLV of season': [-99.88837432861328, -99.67593383789062], 
# 'NSE of residuals': [-0.01190173625946045, -0.025943756103515625], 'RMSE of residuals': [1.1363247632980347, 0.694658637046814], 
# 'R2 of residuals': [-0.01190173625946045, -0.025943756103515625], 'KGE of residuals': [-1.1082943629027477, -1.1234817131817803], 
# 'FHV of residuals': [-100.7909164428711, -101.13409423828125], 'FLV of residuals': [-95.95779418945312, -91.40293884277344]}
# Weights sucessfully loaded
# All processes are finished!

# Epoch 10 Loss 2.8410 time 42.85 lr 1.0
# sLSTM(
#   (linearIn): Linear(in_features=3, out_features=256, bias=True)
#   (lstm): LSTM(256, 256, num_layers=10)
#   (linearOut): Linear(in_features=256, out_features=3, bias=True)
# )
# Epoch 10 Valid Loss 2.6992 Valid Metric {'NSE of trend': [-10.742765426635742, -280.1724548339844], 'RMSE of trend': [0.8123769760131836, 0.699028491973877], 
# 'R2 of trend': [-10.742765426635742, -280.1724548339844], 'KGE of trend': [-0.7173322639514923, -0.7621903570331725], 
# 'FHV of trend': [-107.58654022216797, -89.39804077148438], 'FLV of trend': [-119.32977294921875, -90.78811645507812], 
# 'NSE of season': [-0.0001901388168334961, 5.4001808166503906e-05], 'RMSE of season': [1.3842213153839111, 0.3153139352798462], 
# 'R2 of season': [-0.0001901388168334961, 5.4001808166503906e-05], 'KGE of season': [-0.633294196847848, -0.40856529671440267], 
# 'FHV of season': [-99.96641540527344, -99.80545043945312], 'FLV of season': [-100.18541717529297, -100.53850555419922], 
# 'NSE of residuals': [-0.005127072334289551, -0.010450601577758789], 'RMSE of residuals': [1.132514476776123, 0.6893935203552246], 
# 'R2 of residuals': [-0.005127072334289551, -0.010450601577758789], 'KGE of residuals': [-0.7433606238392234, -0.8154845091379512], 
# 'FHV of residuals': [-100.05054473876953, -100.07250213623047], 'FLV of residuals': [-99.81097412109375, -99.59794616699219]}
# Weights sucessfully loaded
# All processes are finished!