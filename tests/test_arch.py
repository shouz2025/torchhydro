
from hydrodataset import CamelsYstl
from torchhydro.datasets.arch import Arch


class Ystl(object):
    def __init__(self):
        self.datasource = CamelsYstl()
        self.basin = ["1000",]
        self.time_range = ["1990-01-01","1994-01-01"]
        self.var_list = ["streamflow", "discharge_vol1", "discharge_vol2", "discharge_vol3",]
        self.pet_list = ["pet"]
        self.prcp_list = ["prcp"]
        self.streamflow = None
        self.prcp = None
        self.pet = None
        self.read_streamflow()
        # self.read_prcp()
        # self.read_pet()

    def read_streamflow(self):
        data = self.datasource.read_ts_xrdataset(
            self.basin,
            self.time_range,
            self.var_list,
        )
        data1 = data.streamflow.to_dataframe()
        # data2 = data.discharge_vol1.to_dataframe()
        # data3 = data.discharge_vol2.to_dataframe()
        # data4 = data.discharge_vol3.to_dataframe()
        # data1.drop(axis=0, index=("1000", "1992-02-29"), inplace=True)
        # data2.drop(axis=0, index=("1000", "1992-02-29"), inplace=True)
        # data3.drop(axis=0, index=("1000", "1992-02-29"), inplace=True)
        # data4.drop(axis=0, index=("1000", "1992-02-29"), inplace=True)
        data1 = data1.values[:, 0]
        # data2 = data2.values[:, 0]
        # data3 = data3.values[:, 0]
        # data4 = data4.values[:, 0]
        data_ = data1.tolist()  # + data2.tolist() + data3.tolist() + data4.tolist()
        self.streamflow = data_  # + data_

def test_cov():
    x = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25]
    y = [3, 7, 11, 15, 19, 23, 27, 31, 35, 39, 43, 47, 51]
    arch = Arch(x)
    cov_xy = arch.cov(x, y)
    print(cov_xy)
# 112.0

def test_correlation_coefficient():
    x = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25]
    y = [3, 7, 11, 15, 19, 23, 27, 31, 35, 39, 43, 47, 51]
    arch = Arch(x)
    cf_xy = arch.correlation_coefficient(x, y)
    print(cf_xy)
# 1.0

def test_autocorrelation_coefficient():
    x = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25]
    y = [3, 7, 11, 15, 19, 23, 27, 31, 35, 39, 43, 47, 51]
    arch = Arch(x)
    acf_x = arch.autocorrelation_coefficient(x, 2)
    acf_y = arch.autocorrelation_coefficient(y, 2)
    print("acf_x")
    print(acf_x)
    print("acf_y")
    print(acf_y)
# acf_x
# 0.8181818181818182
# acf_y
# 0.8181818181818182

def test_autocorrelation_function():
    y = [3, 7, 11, 15, 19, 23, 27, 31, 35, 39, 43, 47, 51]  # 13
    arch = Arch(y)
    acf_y = arch.autocorrelation_function(y)
    print("acf_y")
    print(acf_y)
# acf_y
# [1.0, 0.9589041095890409, 0.8181818181818182, 0.5714285714285714, 0.25, -0.08695652173913043]

def test_autocorrelation_function_streamflow():
    ystl = Ystl()
    y = ystl.streamflow[:120]
    arch = Arch(y)
    acf_y = arch.autocorrelation_function(y)
    print("acf_y")
    print(acf_y)
# acf_y
# [1.0, 0.6342266055920333, 0.32753115431824, 0.23973292321743508, 0.21491817824983456, 0.2009092630936947,
#  0.20892954808593306, 0.26971931586437053, 0.2832924062841444, 0.09059419847259535, 0.12913037556517407,
#  0.19001026082650052, 0.2621099930806031, 0.18133761445454982, 0.1500289496358911, 0.15126550681523626,
#  0.16316956437325186, 0.19510158820042375, 0.2801677306474809, 0.38964992330330367, 0.4670875635981842,
#  0.017788274794468505, 0.057096728115013234, 0.11368622133004101, 0.17004108652445113, 0.15880128249332395,
#  0.1581605722645884, 0.1387462895147779, 0.06736868729391327, 0.021390593369793928, 0.0011866815929519805,
#  8.588494124591574e-05, -0.024170744579504033, -0.06727986963857098, -0.04969670797620868, -0.03656525695782366,
#  -0.06063259720138117, -0.07301646318703749, -0.04544999685256063, -0.01892346049538998, -0.02716816100377849,
#  -0.025558223760355537, -0.014068303349421931, -0.012284688323241526, -0.0015090595543362586, 0.05295884098744174,
#  0.10838703000718329, 0.04365652095801459, -0.08421705179666063, -0.03937480510817409, 0.06570922731123899,
#  0.20375760029888793, 0.1727285878880766, 0.07850195383940556, -0.005359305170321938, -0.05675431475328219,
#  -0.07793723601802217, -0.08690207938235722, -0.09447293490618013, -0.10080737789317128, -0.10011170699106339,
#  -0.08092149407228803, -0.026971237222672712, 0.052052925002212154, 0.03973436418982643, -0.007809269476096726,
#  -0.03968424951710061, -0.05608117381079413, -0.040533024980027865, 0.0191274326038807, 0.15780063387298848,
#  0.21940187579985676, -0.12171671749630704, -0.312093724445664, -0.3351127024105629, -0.3240606672468912,
#  -0.31445744179516105, -0.30888764113700895, -0.3133542258902319, -0.3310708812532974]


def test_mean_value_function():
    # ystl = Ystl()
    # y = ystl.streamflow[:60]
    x = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25]
    y = [3, 7, 11, 15, 19, 23, 27, 31, 35, 39, 43, 47, 51]
    arch = Arch(y)
    y_t = arch.mean_value_function(y, x)
    print("y_t")
    print(y_t)

def test_std_function():
    x = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25]
    y = [3, 7, 11, 15, 19, 23, 27, 31, 35, 39, 43, 47, 51]
    w = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25]
    std = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    arch = Arch(y)
    std_t = arch.std_function(w, y, std)
    print("std_t")
    print(std_t)

def test_partial_autocorrelation_coefficient():
    ystl = Ystl()
    y = ystl.streamflow[:60]
    arch = Arch(y)
    pacf_y, R = arch.partial_autocorrelation_coefficient(y)
    print("pacf_y")
    print(pacf_y)
    print("R")
    print(R)
# R
# 1	0.85874384	0.64167832	0.51012057	0.45446785	0.43013626	0.40207726	0.3553081	0.29041602	0.22338741	0.16513948	0.11652332	0.08489477	0.04841781	0.04439226	0.05716603	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.85874384	1	0.64167832	0.51012057	0.45446785	0.43013626	0.40207726	0.3553081	0.29041602	0.22338741	0.16513948	0.11652332	0.08489477	0.04841781	0.04439226	0.05716603	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.64167832	0.85874384	1	0.51012057	0.45446785	0.43013626	0.40207726	0.3553081	0.29041602	0.22338741	0.16513948	0.11652332	0.08489477	0.04841781	0.04439226	0.05716603	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.51012057	0.64167832	0.85874384	1	0.45446785	0.43013626	0.40207726	0.3553081	0.29041602	0.22338741	0.16513948	0.11652332	0.08489477	0.04841781	0.04439226	0.05716603	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.45446785	0.51012057	0.64167832	0.85874384	1	0.43013626	0.40207726	0.3553081	0.29041602	0.22338741	0.16513948	0.11652332	0.08489477	0.04841781	0.04439226	0.05716603	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	0.40207726	0.3553081	0.29041602	0.22338741	0.16513948	0.11652332	0.08489477	0.04841781	0.04439226	0.05716603	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	0.3553081	0.29041602	0.22338741	0.16513948	0.11652332	0.08489477	0.04841781	0.04439226	0.05716603	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	0.29041602	0.22338741	0.16513948	0.11652332	0.08489477	0.04841781	0.04439226	0.05716603	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	0.22338741	0.16513948	0.11652332	0.08489477	0.04841781	0.04439226	0.05716603	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	0.16513948	0.11652332	0.08489477	0.04841781	0.04439226	0.05716603	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	0.11652332	0.08489477	0.04841781	0.04439226	0.05716603	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	0.08489477	0.04841781	0.04439226	0.05716603	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	0.04841781	0.04439226	0.05716603	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	0.04439226	0.05716603	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	0.05716603	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.05716603	0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	0.06483641	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.06483641	0.05716603	0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	0.03676011	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# 0.03676011	0.06483641	0.05716603	0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	-0.05285223	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# -0.05285223	0.03676011	0.06483641	0.05716603	0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	-0.16489816	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# -0.16489816	-0.05285223	0.03676011	0.06483641	0.05716603	0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	-0.24111416	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# -0.24111416	-0.16489816	-0.05285223	0.03676011	0.06483641	0.05716603	0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	-0.29087635	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# -0.29087635	-0.24111416	-0.16489816	-0.05285223	0.03676011	0.06483641	0.05716603	0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	-0.33063037	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# -0.33063037	-0.29087635	-0.24111416	-0.16489816	-0.05285223	0.03676011	0.06483641	0.05716603	0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	-0.36718442	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# -0.36718442	-0.33063037	-0.29087635	-0.24111416	-0.16489816	-0.05285223	0.03676011	0.06483641	0.05716603	0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	-0.40365427	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# -0.40365427	-0.36718442	-0.33063037	-0.29087635	-0.24111416	-0.16489816	-0.05285223	0.03676011	0.06483641	0.05716603	0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	-0.43930055	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# -0.43930055	-0.40365427	-0.36718442	-0.33063037	-0.29087635	-0.24111416	-0.16489816	-0.05285223	0.03676011	0.06483641	0.05716603	0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	-0.47170272	-0.49893407	-0.52025969	-0.53409903
# -0.47170272	-0.43930055	-0.40365427	-0.36718442	-0.33063037	-0.29087635	-0.24111416	-0.16489816	-0.05285223	0.03676011	0.06483641	0.05716603	0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	-0.49893407	-0.52025969	-0.53409903
# -0.49893407	-0.47170272	-0.43930055	-0.40365427	-0.36718442	-0.33063037	-0.29087635	-0.24111416	-0.16489816	-0.05285223	0.03676011	0.06483641	0.05716603	0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	-0.52025969	-0.53409903
# -0.52025969	-0.49893407	-0.47170272	-0.43930055	-0.40365427	-0.36718442	-0.33063037	-0.29087635	-0.24111416	-0.16489816	-0.05285223	0.03676011	0.06483641	0.05716603	0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1	-0.53409903
# -0.53409903	-0.52025969	-0.49893407	-0.47170272	-0.43930055	-0.40365427	-0.36718442	-0.33063037	-0.29087635	-0.24111416	-0.16489816	-0.05285223	0.03676011	0.06483641	0.05716603	0.04439226	0.04841781	0.08489477	0.11652332	0.16513948	0.22338741	0.29041602	0.3553081	0.40207726	0.43013626	0.45446785	0.51012057	0.64167832	0.85874384	1
# pacf_y
# [ 1.00000000e+00  0.00000000e+00 -2.22044605e-16  5.55111512e-17
#  -8.32667268e-17 -2.49800181e-16  0.00000000e+00 -2.77555756e-17
#  -8.32667268e-17 -2.77555756e-17  5.55111512e-17  0.00000000e+00
#   2.77555756e-17  8.32667268e-17 -2.77555756e-17  2.77555756e-17
#   0.00000000e+00  5.55111512e-17  2.77555756e-17 -2.77555756e-17
#   0.00000000e+00  0.00000000e+00  5.55111512e-17 -8.32667268e-17
#  -2.77555756e-17 -8.32667268e-17 -5.55111512e-17  2.22044605e-16
#   5.55111512e-17 -2.77555756e-17]


def test_p_check():
    ystl = Ystl()
    y = ystl.streamflow[:60]
    arch = Arch(y)
    p_check = arch.pcheck(y)
    print("p_check")
    print(p_check)
